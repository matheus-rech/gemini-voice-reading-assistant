{"ast":null,"code":"var _jsxFileName = \"/Users/matheusrech/Documents/gemini-voice-reading-assistant/frontend/src/components/VideoPreview.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoPreview({\n  mode\n}) {\n  _s();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    let stream = null;\n    const startCamera = async () => {\n      try {\n        if (mode === 'camera') {\n          stream = await navigator.mediaDevices.getUserMedia({\n            video: true\n          });\n        } else if (mode === 'screen') {\n          stream = await navigator.mediaDevices.getDisplayMedia({\n            video: true\n          });\n        } else {\n          return; // No video for 'none' mode\n        }\n\n        // Use ref to attach stream to video element\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (err) {\n        console.error('Error accessing media devices:', err);\n      }\n    };\n    startCamera();\n\n    // Cleanup function\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [mode]);\n  if (mode === 'none') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-placeholder\",\n      children: \"Audio Only Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-preview\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      style: {\n        width: '100%',\n        height: 'auto',\n        borderRadius: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoPreview, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = VideoPreview;\nexport default VideoPreview;\nvar _c;\n$RefreshReg$(_c, \"VideoPreview\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","VideoPreview","mode","_s","videoRef","stream","startCamera","navigator","mediaDevices","getUserMedia","video","getDisplayMedia","current","srcObject","err","console","error","getTracks","forEach","track","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","style","width","height","borderRadius","_c","$RefreshReg$"],"sources":["/Users/matheusrech/Documents/gemini-voice-reading-assistant/frontend/src/components/VideoPreview.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nfunction VideoPreview({ mode }) {\n  const videoRef = useRef(null);\n  \n  useEffect(() => {\n    let stream = null;\n\n    const startCamera = async () => {\n      try {\n        if (mode === 'camera') {\n          stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        } else if (mode === 'screen') {\n          stream = await navigator.mediaDevices.getDisplayMedia({ video: true });\n        } else {\n          return; // No video for 'none' mode\n        }\n        \n        // Use ref to attach stream to video element\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (err) {\n        console.error('Error accessing media devices:', err);\n      }\n    };\n\n    startCamera();\n\n    // Cleanup function\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [mode]);\n\n  if (mode === 'none') {\n    return <div className=\"video-placeholder\">Audio Only Mode</div>;\n  }\n\n  return (\n    <div className=\"video-preview\">\n      <video\n        ref={videoRef}\n        autoPlay\n        style={{ width: '100%', height: 'auto', borderRadius: '8px' }}\n      />\n    </div>\n  );\n}\n\nexport default VideoPreview;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,YAAYA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIQ,MAAM,GAAG,IAAI;IAEjB,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,IAAIJ,IAAI,KAAK,QAAQ,EAAE;UACrBG,MAAM,GAAG,MAAME,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;YAAEC,KAAK,EAAE;UAAK,CAAC,CAAC;QACrE,CAAC,MAAM,IAAIR,IAAI,KAAK,QAAQ,EAAE;UAC5BG,MAAM,GAAG,MAAME,SAAS,CAACC,YAAY,CAACG,eAAe,CAAC;YAAED,KAAK,EAAE;UAAK,CAAC,CAAC;QACxE,CAAC,MAAM;UACL,OAAO,CAAC;QACV;;QAEA;QACA,IAAIN,QAAQ,CAACQ,OAAO,EAAE;UACpBR,QAAQ,CAACQ,OAAO,CAACC,SAAS,GAAGR,MAAM;QACrC;MACF,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;MACtD;IACF,CAAC;IAEDR,WAAW,CAAC,CAAC;;IAEb;IACA,OAAO,MAAM;MACX,IAAID,MAAM,EAAE;QACVA,MAAM,CAACY,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACnD;IACF,CAAC;EACH,CAAC,EAAE,CAAClB,IAAI,CAAC,CAAC;EAEV,IAAIA,IAAI,KAAK,MAAM,EAAE;IACnB,oBAAOF,OAAA;MAAKqB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjE;EAEA,oBACE1B,OAAA;IAAKqB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BtB,OAAA;MACE2B,GAAG,EAAEvB,QAAS;MACdwB,QAAQ;MACRC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAM;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CAhDQF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAkDrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}